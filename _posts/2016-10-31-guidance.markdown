---
title: Wandering Thoughts So Lost So Helpless, Yearning For More Guidance
date: 2016-10-31
categories:
tags:
---

A continuation of my journey as a TIY student: Yet again I find myself lost in thought and feelings. There is so much material being dumped into my brain that I ask myself, _how much material do I actually retain?_ Unintentional rhyming aside, my wandering thoughts are very jumbled: My blog posts have lost there direction and I am inconsistent with the frequency of my posts. Therefore, I have decided, as of today that future blog posts will not only contain my opinions, thoughts, and feelings (as these things do happen and drive my persona ðŸ˜¸ ), BUT, additionally, I will be sure to add more tips, tutorials, and my experience with code (so long as time permits).

In previous posts, I have written code snippets about my frustration/nuances as I continue my endless endeavor to become a splendid coder. However, I have noticed more frequently as I scour the interwebs for up-to-date, relevant, and complete tutorials/helpful insights I more often than not come up short with my search. I find myself getting lost in outdated, nearly relevant, but mostly incomplete and broken material. Don't get me wrong, I think the never-ending struggle of getting things wrong again and again is a necessary evil when learning to code. HOWEVER, (I have noticed that there are several conditionals in this post...), I think it would be good for not only me, but others as well, to record my own tutorials/tips as I grow and learn not just more, but enough information to demonstrate competence with a subject.

Therefore, I will start from the very beginning, and list some fundamental code skills i have come across, beginning with Terminal Tips!

ProTip # 1: Use iTerm2 You can download it from the app store, or download it here: <https://www.iterm2.com/>. I recommend this terminal, because, well, just look at all the cool features it provides: <https://www.iterm2.com/features.html>.

Still not convinced? Well, I personally find having terminal just a keypress away very useful for coding. Also, being able to configure an application to function exactly the way you want it to, is priceless! When I am coding with friends on their computer and my hotkey function does not immediately bring up the terminal I get severely disappointed and convince them to download the app. It will change your production rate, your relationship with terminal and it will change your life!

Some other useful commands and acronyms for the newbies like me:

'CLI' stands for Command Line Interface. It's just another fancy way of saying Terminal...

`pwd` prints the path (/folders) that which you are currently working in to Terminal

`ls` lists available file folders in your current directory.

`ls -a` lists all possible file folders in your current directory.

ProTip # 2: `ll` `ll` is a command similar to `ls`, but the display is cleaner and easier to read. It also includes more information in regards to the folder creation, user, etc. I personally do not have this command for my CLI YET, but I hope to have it soon!

'~' a.k.a Tilda. Represents the home directory, the root of all directories/file folders on your computer.

ProTip # 3: Beware rm -rf* If anyone tells you this is the solution, **DO NOT BELIEVE THEM!** This command is well known and very dangerous. Running this command in any directory will repeatedly remove everything within that directory and it will do so without ever prompting you. You have been warned...

`mkdir` makes a new file folder within your current directory.

`cd` changes your directory to whatever file folder name you list after this command.

`touch` creates a new file within your current directory.

`mv` can either move a file to a new folder, or rename and move a file.

`atom .` opens the current directory in atom.

Well, I think that's all for today. There are many other CLI commands that I could add here, but several of them are situational, and if you found this post in your search for CLI basics, hopefully it didn't spoil too many of the basic skills for you. The struggle must remain a real! After all sucking at something is the first step at being good at something! Keep getting things wrong and keep striving to get better; that's what I try to do daily! Stay strong and code on!
